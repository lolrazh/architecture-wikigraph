"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction denormalizeTitle(title) {\n    return title.replace(/_/g, \" \");\n}\n// Function to wrap text\nfunction wrap(text, width) {\n    text.each(function() {\n        const text = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n        const words = text.text().split(/\\s+/);\n        const lineHeight = 1.1; // ems\n        const y = text.attr(\"y\");\n        const dy = parseFloat(text.attr(\"dy\") || \"0\");\n        let line = [];\n        let lineNumber = 0;\n        let tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        words.forEach((word, i)=>{\n            var _tspan_node;\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if ((((_tspan_node = tspan.node()) === null || _tspan_node === void 0 ? void 0 : _tspan_node.getComputedTextLength()) || 0) > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [\n                    word\n                ];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        });\n    });\n}\nfunction Home() {\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchData = async ()=>{\n            try {\n                const response = await fetch(\"/graph.json\");\n                const graphData = await response.json();\n                if (!svgRef.current) return;\n                // Clear any existing content\n                d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n                // Calculate depth for each node using BFS\n                const depthMap = new Map();\n                const queue = [\n                    {\n                        id: \"Architecture\",\n                        depth: 0\n                    }\n                ];\n                depthMap.set(\"Architecture\", 0);\n                while(queue.length > 0){\n                    const current = queue.shift();\n                    const links = graphData.links.filter((l)=>(typeof l.source === \"string\" ? l.source : l.source.id) === current.id);\n                    for (const link of links){\n                        const targetId = typeof link.target === \"string\" ? link.target : link.target.id;\n                        if (!depthMap.has(targetId)) {\n                            depthMap.set(targetId, current.depth + 1);\n                            queue.push({\n                                id: targetId,\n                                depth: current.depth + 1\n                            });\n                        }\n                    }\n                }\n                // Add depth to nodes\n                graphData.nodes.forEach((node)=>{\n                    node.depth = depthMap.get(node.id) || 0;\n                });\n                // Use window dimensions\n                const width = window.innerWidth;\n                const height = window.innerHeight;\n                // Create SVG\n                const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"bg-[#0a0a0a]\");\n                // Add zoom functionality\n                const g = svg.append(\"g\");\n                svg.call(d3__WEBPACK_IMPORTED_MODULE_2__.zoom().extent([\n                    [\n                        0,\n                        0\n                    ],\n                    [\n                        width,\n                        height\n                    ]\n                ]).scaleExtent([\n                    0.1,\n                    4\n                ]).on(\"zoom\", (event)=>{\n                    g.attr(\"transform\", event.transform);\n                }));\n                // Color scale for depth - using pastel colors\n                const depthColors = [\n                    \"#94a3b8\",\n                    \"#fca5a5\",\n                    \"#86efac\",\n                    \"#93c5fd\",\n                    \"#c4b5fd\" // Depth 4 (violet-300)\n                ];\n                const colorScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleOrdinal().domain([\n                    0,\n                    1,\n                    2,\n                    3,\n                    4\n                ]).range(depthColors);\n                // Create force simulation\n                const simulation = d3__WEBPACK_IMPORTED_MODULE_2__.forceSimulation(graphData.nodes).force(\"link\", d3__WEBPACK_IMPORTED_MODULE_2__.forceLink(graphData.links).id((d)=>d.id).distance(100)).force(\"charge\", d3__WEBPACK_IMPORTED_MODULE_2__.forceManyBody().strength((d)=>d.id === \"Architecture\" ? -2000 : -800)).force(\"center\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCenter(width / 2, height / 2)).force(\"collision\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCollide().radius(30)).force(\"x\", d3__WEBPACK_IMPORTED_MODULE_2__.forceX(width / 2).strength(0.05)).force(\"y\", d3__WEBPACK_IMPORTED_MODULE_2__.forceY(height / 2).strength(0.05));\n                // Create links\n                const links = g.append(\"g\").selectAll(\"line\").data(graphData.links).join(\"line\").attr(\"stroke\", \"rgba(255, 255, 255, 0.3)\").attr(\"stroke-opacity\", 0.6).attr(\"stroke-width\", 1);\n                // Create nodes\n                const nodes = g.append(\"g\").selectAll(\"g\").data(graphData.nodes).join(\"g\").call(d3__WEBPACK_IMPORTED_MODULE_2__.drag().on(\"start\", (event, d)=>{\n                    if (!event.active) simulation.alphaTarget(0.3).restart();\n                    d.fx = d.x;\n                    d.fy = d.y;\n                }).on(\"drag\", (event, d)=>{\n                    d.fx = event.x;\n                    d.fy = event.y;\n                }).on(\"end\", (event, d)=>{\n                    if (!event.active) simulation.alphaTarget(0);\n                    d.fx = null;\n                    d.fy = null;\n                }));\n                // Add circles to nodes\n                nodes.append(\"circle\").attr(\"r\", (d)=>d.id === \"Architecture\" ? 12 : 8).attr(\"fill\", (d)=>colorScale(d.depth || 0)).attr(\"stroke\", (d)=>{\n                    const color = d3__WEBPACK_IMPORTED_MODULE_2__.color(colorScale(d.depth || 0));\n                    return color ? color.darker(1.5).toString() : \"#000\";\n                }).attr(\"stroke-width\", 1).style(\"transition\", \"stroke-width 0.2s ease\").on(\"mouseover\", function() {\n                    d3__WEBPACK_IMPORTED_MODULE_2__.select(this).attr(\"stroke-width\", 3);\n                }).on(\"mouseout\", function() {\n                    d3__WEBPACK_IMPORTED_MODULE_2__.select(this).attr(\"stroke-width\", 1);\n                });\n                // Add labels to nodes with text wrapping\n                nodes.append(\"text\").text((d)=>denormalizeTitle(d.id)).attr(\"x\", 0).attr(\"y\", (d)=>d.id === \"Architecture\" ? 24 : 20).attr(\"dy\", 0).attr(\"text-anchor\", \"middle\").attr(\"fill\", \"#fff\").attr(\"font-size\", (d)=>d.id === \"Architecture\" ? \"14px\" : \"11px\").attr(\"font-family\", \"Inter, system-ui, sans-serif\").style(\"pointer-events\", \"none\").style(\"text-shadow\", \"0 1px 8px rgba(0,0,0,0.5)\").call(wrap, 80);\n                // Add title for hover tooltip\n                nodes.append(\"title\").text((d)=>denormalizeTitle(d.id));\n                // Add click handler to open Wikipedia page\n                nodes.on(\"click\", (event, d)=>{\n                    const title = denormalizeTitle(d.id);\n                    window.open(\"https://en.wikipedia.org/wiki/\".concat(encodeURIComponent(title)), \"_blank\");\n                });\n                // Update positions on each tick\n                simulation.on(\"tick\", ()=>{\n                    links.attr(\"x1\", (d)=>d.source.x).attr(\"y1\", (d)=>d.source.y).attr(\"x2\", (d)=>d.target.x).attr(\"y2\", (d)=>d.target.y);\n                    nodes.attr(\"transform\", (d)=>\"translate(\".concat(d.x, \",\").concat(d.y, \")\"));\n                });\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error loading graph data:\", error);\n                setIsLoading(false);\n            }\n        };\n        fetchData();\n        // Add window resize handler\n        const handleResize = ()=>{\n            if (svgRef.current) {\n                svgRef.current.setAttribute(\"width\", window.innerWidth.toString());\n                svgRef.current.setAttribute(\"height\", window.innerHeight.toString());\n            }\n        };\n        window.addEventListener(\"resize\", handleResize);\n        return ()=>window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"fixed inset-0 overflow-hidden bg-[#0a0a0a] text-gray-200\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                ref: svgRef,\n                className: \"w-screen h-screen\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 257,\n                columnNumber: 7\n            }, this),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-gray-400 font-medium\",\n                    children: \"Loading visualization...\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 260,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 259,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 256,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"JAphPLNbXSt8DXvSQEcOTT2wthk=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});