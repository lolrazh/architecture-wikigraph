"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction denormalizeTitle(title) {\n    return title.replace(/_/g, \" \");\n}\n// Function to wrap text\nfunction wrap(text, width) {\n    text.each(function() {\n        const text = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n        const words = text.text().split(/\\s+/);\n        const lineHeight = 1.1; // ems\n        const y = text.attr(\"y\");\n        const dy = parseFloat(text.attr(\"dy\") || \"0\");\n        let line = [];\n        let lineNumber = 0;\n        let tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        words.forEach((word, i)=>{\n            var _tspan_node;\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if ((((_tspan_node = tspan.node()) === null || _tspan_node === void 0 ? void 0 : _tspan_node.getComputedTextLength()) || 0) > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [\n                    word\n                ];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        });\n    });\n}\nfunction Home() {\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [graphData, setGraphData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        nodes: [],\n        links: []\n    });\n    const [simulation, setSimulation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Helper function to get node ID regardless of format\n    const getNodeId = (node)=>{\n        return typeof node === \"string\" ? node : node.id;\n    };\n    // Function to merge new data with existing graph\n    const mergeGraphData = (existing, newData)=>{\n        const nodes = [\n            ...existing.nodes\n        ];\n        const links = [\n            ...existing.links\n        ];\n        // Add new nodes\n        newData.nodes.forEach((newNode)=>{\n            const existingIndex = nodes.findIndex((n)=>n.id === newNode.id);\n            if (existingIndex === -1) {\n                nodes.push(newNode);\n            } else {\n                nodes[existingIndex] = {\n                    ...nodes[existingIndex],\n                    ...newNode\n                };\n            }\n        });\n        // Add new links\n        newData.links.forEach((newLink)=>{\n            const existingIndex = links.findIndex((l)=>getNodeId(l.source) === getNodeId(newLink.source) && getNodeId(l.target) === getNodeId(newLink.target));\n            if (existingIndex === -1) {\n                // For new links, ensure source and target are node references\n                const sourceNode = nodes.find((n)=>n.id === getNodeId(newLink.source));\n                const targetNode = nodes.find((n)=>n.id === getNodeId(newLink.target));\n                if (sourceNode && targetNode) {\n                    links.push({\n                        ...newLink,\n                        source: sourceNode,\n                        target: targetNode\n                    });\n                }\n            } else {\n                links[existingIndex] = {\n                    ...links[existingIndex],\n                    ...newLink\n                };\n            }\n        });\n        return {\n            nodes,\n            links\n        };\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const initGraph = async ()=>{\n            if (!svgRef.current) return;\n            // Clear any existing content\n            d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n            // Setup SVG\n            const width = window.innerWidth;\n            const height = window.innerHeight;\n            const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).attr(\"width\", width).attr(\"height\", height);\n            // Create container group for zoom\n            const g = svg.append(\"g\");\n            // Setup zoom behavior\n            const zoom = d3__WEBPACK_IMPORTED_MODULE_2__.zoom().scaleExtent([\n                0.1,\n                4\n            ]).on(\"zoom\", (event)=>g.attr(\"transform\", event.transform));\n            svg.call(zoom);\n            // Fetch all graph data\n            console.log(\"Loading complete graph data...\");\n            const response = await fetch(\"/api/node-connections?id=Architecture\");\n            const data = await response.json();\n            console.log(\"Received graph data:\", {\n                nodes: data.nodes.length,\n                links: data.links.length\n            });\n            // Process links to use node references instead of string IDs\n            const processedLinks = data.links.map((link)=>{\n                const sourceNode = data.nodes.find((n)=>n.id === getNodeId(link.source));\n                const targetNode = data.nodes.find((n)=>n.id === getNodeId(link.target));\n                return {\n                    ...link,\n                    source: sourceNode || link.source,\n                    target: targetNode || link.target\n                };\n            });\n            // Create simulation with stronger initial forces for better layout\n            const sim = d3__WEBPACK_IMPORTED_MODULE_2__.forceSimulation(data.nodes).force(\"link\", d3__WEBPACK_IMPORTED_MODULE_2__.forceLink(processedLinks).id((d)=>d.id).distance(200)).force(\"charge\", d3__WEBPACK_IMPORTED_MODULE_2__.forceManyBody().strength(-2000)).force(\"center\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCenter(width / 2, height / 2)).force(\"collision\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCollide(50));\n            setSimulation(sim);\n            setGraphData({\n                nodes: data.nodes,\n                links: processedLinks\n            });\n            // Color scheme based on depth\n            const getNodeColor = (depth)=>{\n                switch(depth){\n                    case 0:\n                        return \"#94a3b8\"; // Root (Architecture)\n                    case 1:\n                        return \"#fca5a5\"; // Direct connections\n                    case 2:\n                        return \"#86efac\"; // Secondary connections (depth 2)\n                    default:\n                        return \"#94a3b8\";\n                }\n            };\n            // Create links\n            const links = g.append(\"g\").selectAll(\"line\").data(processedLinks).join(\"line\").attr(\"stroke\", \"rgba(255, 255, 255, 0.3)\").attr(\"stroke-width\", 1);\n            // Create nodes\n            const nodes = g.append(\"g\").selectAll(\"g\").data(data.nodes).join(\"g\").call(d3__WEBPACK_IMPORTED_MODULE_2__.drag().on(\"start\", (event, d)=>{\n                if (!event.active) sim.alphaTarget(0.3).restart();\n                d.fx = d.x;\n                d.fy = d.y;\n            }).on(\"drag\", (event, d)=>{\n                d.fx = event.x;\n                d.fy = event.y;\n            }).on(\"end\", (event, d)=>{\n                if (!event.active) sim.alphaTarget(0);\n                d.fx = null;\n                d.fy = null;\n            }));\n            // Add circles to nodes\n            nodes.append(\"circle\").attr(\"r\", function(d) {\n                return d.category === \"root\" ? 12 : 8;\n            }).attr(\"fill\", function(d) {\n                return getNodeColor(d.depth);\n            }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1);\n            // Add labels\n            nodes.append(\"text\").text(function(d) {\n                return denormalizeTitle(d.id);\n            }).attr(\"x\", 0).attr(\"y\", function(d) {\n                return d.category === \"root\" ? 24 : 20;\n            }).attr(\"text-anchor\", \"middle\").attr(\"fill\", \"#fff\").attr(\"font-size\", function(d) {\n                return d.category === \"root\" ? \"14px\" : \"12px\";\n            }).style(\"pointer-events\", \"none\");\n            // Add click handler for Wikipedia links\n            nodes.on(\"click\", function(event, d) {\n                window.open(\"https://en.wikipedia.org/wiki/\".concat(encodeURIComponent(d.id)), \"_blank\");\n            });\n            // Update positions on tick\n            sim.on(\"tick\", ()=>{\n                links.attr(\"x1\", function(d) {\n                    return d.source.x;\n                }).attr(\"y1\", function(d) {\n                    return d.source.y;\n                }).attr(\"x2\", function(d) {\n                    return d.target.x;\n                }).attr(\"y2\", function(d) {\n                    return d.target.y;\n                });\n                nodes.attr(\"transform\", function(d) {\n                    return \"translate(\".concat(d.x, \",\").concat(d.y, \")\");\n                });\n            });\n            // Handle window resize\n            const handleResize = ()=>{\n                const width = window.innerWidth;\n                const height = window.innerHeight;\n                svg.attr(\"width\", width).attr(\"height\", height);\n                sim.force(\"center\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCenter(width / 2, height / 2));\n            };\n            window.addEventListener(\"resize\", handleResize);\n            return ()=>{\n                window.removeEventListener(\"resize\", handleResize);\n                sim.stop();\n            };\n        };\n        initGraph();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"fixed inset-0 overflow-hidden bg-[#0a0a0a] text-gray-200\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                ref: svgRef,\n                className: \"w-screen h-screen\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 286,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute bottom-2 right-2 text-[8px] text-gray-400 font-medium\",\n                children: \"A SANDHEEP RAJKUMAR PROJECT\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 287,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Projects\\\\2025\\\\architecture-wikigraph\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 285,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"neoJlpewdtV2acvbVSpN78uwuOs=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});